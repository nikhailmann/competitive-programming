class Solution {
    public int evalRPN(String[] tokens) {
        Stack<Integer> s = new Stack<>();
        int x1, x2;
        int result = 0;

        for (int i = 0; i < tokens.length; i++) {
            if (!(tokens[i].equals("+") || tokens[i].equals("-") || tokens[i].equals("*")|| tokens[i].equals("/"))) {
                s.push(Integer.valueOf(tokens[i]));
            } else {
                x2 = s.pop();
                x1 = s.pop();

                switch(tokens[i]) {
                    case "+":
                        result = x1 + x2;
                        break;
                    case "-":
                        result = x1 - x2;
                        break;
                    case "*":
                        result = x1 * x2;
                        break;
                    case "/":
                        result = x1 / x2;
                        break;
                }

                s.push(result);
            }
        }
        return s.pop();
    }
}
